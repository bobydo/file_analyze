{
  "file_metadata": {
    "original_path": "d:\\file_analyze\\by_extension\\spc_files\\specifications\\test\\Specification\\BGFA1A.spc",
    "filename": "BGFA1A.spc",
    "size_bytes": 14976,
    "extension": ".spc",
    "file_type": "specification_binary",
    "is_binary": true,
    "last_modified": "2012-04-23T09:20:03",
    "export_timestamp": "2025-10-22T15:25:12.676017"
  },
  "analysis": {
    "type": "SPC Specification File",
    "format": "Binary with embedded text",
    "size": 14976,
    "readable_text_segments": [
      "150# CS                                 080000",
      "B31.3",
      "BGIJKMQR                                GIJKMQR",
      "G         FG        DEHS      BCD       C         BDEFGJKPRS",
      "EFR       GHL       ACEFGHOPQRNOP       A         ADEFHIJNW",
      "I         S         LMW       MORS",
      "1R66ABAB",
      "EBS         EM~                     CES   CES         EM~      EM~         Nq=",
      "1R66ABAB",
      "EM~         EM~                     CES   CES         EM~      EM~         N",
      "1R66ABAB",
      "EM~         EM~                     CES   CES         EM~      EM~         Y=",
      "1R66ABAB",
      "EBS         EM~                     CES   CES         EM~      EM~         Yff",
      "1R66ABAB",
      "EBS         EM~                     CES   CES         EM~      EM~         Y",
      "1R66ABAB",
      "EBS         EM~                     CES   CES         EM~      EM~         N",
      "1R66ABAB",
      "EM~         EM~                     CES   CES         EM~      EM~         Y33"
    ],
    "recommended_tools": [
      "Specialized piping software (CAESAR II, AutoPIPE)",
      "Hex editor for binary analysis",
      "This Python script for text extraction"
    ]
  },
  "content_preview": {
    "binary_preview": [
      {
        "offset": "00000000",
        "hex": "31 35 30 23 20 43 53 20 20 20 20 20 20 20 20 20",
        "ascii": "150# CS         "
      },
      {
        "offset": "00000010",
        "hex": "20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20",
        "ascii": "                "
      },
      {
        "offset": "00000020",
        "hex": "20 20 20 20 20 20 20 20 30 38 30 30 30 30 00 00",
        "ascii": "        080000.."
      },
      {
        "offset": "00000030",
        "hex": "00 00 00 00 00 00 00 00 00 00 00 00 42 33 31 2e",
        "ascii": "............B31."
      },
      {
        "offset": "00000040",
        "hex": "33 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20",
        "ascii": "3               "
      },
      {
        "offset": "00000050",
        "hex": "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00",
        "ascii": "................"
      },
      {
        "offset": "00000060",
        "hex": "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00",
        "ascii": "................"
      },
      {
        "offset": "00000070",
        "hex": "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00",
        "ascii": "................"
      },
      {
        "offset": "00000080",
        "hex": "42 47 49 4a 4b 4d 51 52 20 20 20 20 20 20 20 20",
        "ascii": "BGIJKMQR        "
      },
      {
        "offset": "00000090",
        "hex": "20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20",
        "ascii": "                "
      },
      {
        "offset": "000000a0",
        "hex": "20 20 20 20 20 20 20 20 47 49 4a 4b 4d 51 52 20",
        "ascii": "        GIJKMQR "
      },
      {
        "offset": "000000b0",
        "hex": "20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20",
        "ascii": "                "
      },
      {
        "offset": "000000c0",
        "hex": "20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20",
        "ascii": "                "
      },
      {
        "offset": "000000d0",
        "hex": "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00",
        "ascii": "................"
      },
      {
        "offset": "000000e0",
        "hex": "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00",
        "ascii": "................"
      },
      {
        "offset": "000000f0",
        "hex": "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00",
        "ascii": "................"
      }
    ],
    "preview_size": 256
  },
  "error": null
}